
# =================================================================
# playbook_1_create_batch1.yml - 剧本1: 创建第一批虚拟机
# =================================================================
---
- name: "Stage 1: Provision Batch 1 VMs"
  hosts: localhost
  gather_facts: no
  vars_files:
    - vars.yml

  tasks:
    - name: "Create Batch 1 VM: {{ item.name }}"
      community.vmware.vmware_guest:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ vcenter_datacenter }}"
        cluster: "{{ vcenter_cluster }}"
        # 如果 vm_folder 变量为空, `default(omit)` 会让 Ansible 忽略此参数。
        folder: "{{ vm_folder | default(omit) }}"
        name: "{{ item.name }}"
        state: poweredoff
        guest_id: "{{ guest_id }}"
        hardware:
          num_cpus: "{{ item.num_cpus }}"
          memory_mb: "{{ item.memory_mb }}"
        disk:
          - size_gb: "{{ item.disk1_gb }}"
            type: thin
            datastore: "{{ vcenter_datastore }}"
        networks:
          - name: "{{ vm_network }}"
            device_type: vmxnet3
            mac: "{{ item.mac }}"
        cdrom:
          - type: iso
            iso_path: "{{ vm_iso_path }}"
            state: present
            controller_number: 0
            unit_number: 0
      loop: "{{ test_vms }}"

    # # --- 步骤 2: 使用 vmware_guest 重新配置 VM 以启用 disk.EnableUUID ---
    # - name: "Step 2: Reconfigure VM {{ item.name }} to enable kickstart"
    #   community.vmware.vmware_guest:
    #     hostname: "{{ vcenter_hostname }}"
    #     username: "{{ vcenter_username }}"
    #     password: "{{ vcenter_password }}"
    #     validate_certs: false
    #     datacenter: "{{ vcenter_datacenter }}"
    #     folder: "{{ vm_folder | default(omit) }}"
    #     name: "{{ item.name }}"
    #     state: present
    #     # 在硬件配置中启用 disk UUID
    #     advanced_settings:
    #       - key: "guestinfo.userdata"
    #         value: "{{ lookup('file', 'helper-ks-rocky9.cfg') | b64encode }}"
    #       - key: "guestinfo.userdata.encoding"
    #         value: "base64"
    #       # - key: 'linux.boot.command_line'
    #       #   value: 'inst.ks=vmware'
    #   loop: "{{ helper_vms }}"
    #   register: uuid_config_result